<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.SurveyMapper" >
  <resultMap id="BaseResultMap" type="com.example.pojo.Survey" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="survey_name" property="surveyName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="logo_path" property="logoPath" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="finish_time" property="finishTime" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, survey_name, status, logo_path, create_time, finish_time, user_id
  </sql>
 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from survey
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from survey
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.pojo.Survey" >
    insert into survey (id, survey_name, status, 
      logo_path, create_time, finish_time, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{surveyName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{logoPath,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{finishTime,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.pojo.Survey" >
    insert into survey
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="surveyName != null" >
        survey_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="logoPath != null" >
        logo_path,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="surveyName != null" >
        #{surveyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="logoPath != null" >
        #{logoPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.pojo.Survey" >
    update survey
    <set >
      <if test="surveyName != null" >
        survey_name = #{surveyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="logoPath != null" >
        logo_path = #{logoPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.pojo.Survey" >
    update survey
    set survey_name = #{surveyName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      logo_path = #{logoPath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      finish_time = #{finishTime,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>